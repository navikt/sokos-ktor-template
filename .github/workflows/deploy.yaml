jobs:
  build:
    name: Build/test & push image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: gradle/actions/setup-gradle@v4
        env:
          DEPENDENCY_GRAPH_INCLUDE_CONFIGURATIONS: compileClasspath|runtimeClasspath
        with:
          dependency-graph: generate-and-submit
      - run: ./gradlew --configuration-cache build shadowJar

      - name: Build docker image
        uses: docker/setup-buildx-action@v3

      - name: Push docker image to Google Artifact Registry
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: okonomi
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  label:
    name: Add Label Based on Branch Name
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Add Label
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = context.payload.ref.split('/').pop();
            const labelPrefix = branchName.split('/')[0]; // Get the first part (e.g., 'feature')
            const label = labelPrefix; // Use as label directly

            // Add the label to the pull request
            const prNumber = context.payload.pull_request ? context.payload.pull_request.number : null;

            if (prNumber) {
              await github.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: [label],
              });
            } else {
              console.log('No pull request associated with this push.');
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-dev:
    name: Deploy to dev
    needs: [build, label]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/naiserator-dev.yaml
          IMAGE: ${{ needs.build.outputs.image }}
          TIMEOUT: 10m
          PRINT_PAYLOAD: true



# Uncomment and modify as needed for production deployment
# deploy-prod:
#   name: Deploy to prod
#   needs: [ build , deploy-dev ]
#   runs-on: ubuntu-latest
#   steps:
#     - uses: actions/checkout@v4
#     - uses: nais/deploy/actions/deploy@v2
#       env:
#         CLUSTER: prod-gcp
#         RESOURCE: .nais/naiserator-prod.yaml
#         IMAGE: ${{ needs.build.outputs.image }}
#         TIMEOUT: 10m
#         PRINT_PAYLOAD: true
